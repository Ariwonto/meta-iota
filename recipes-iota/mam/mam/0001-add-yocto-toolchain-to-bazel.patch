From 751509a8607c525507549ea146098c1f082d7530 Mon Sep 17 00:00:00 2001
From: bernardo rodrigues <bernardo.araujo@silicon-gears.com>
Date: Mon, 12 Aug 2019 06:29:17 -0400
Subject: [PATCH] add yocto toolchain to bazel

---
 WORKSPACE             | 10 ++++++++++
 cclient/BUILD         | 10 ++++++++++
 cclient/workspace.bzl | 13 +++++++++++++
 mam/BUILD             | 16 ++++++++++++++++
 4 files changed, 49 insertions(+)
 create mode 100644 cclient/workspace.bzl

diff --git a/WORKSPACE b/WORKSPACE
index 0474f47..44dcf23 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -46,3 +46,13 @@ iota_deps()
 setup_toolchains()
 
 fetch_snapshot_files()
+
+load("//cclient:workspace.bzl", "yocto_workspace")
+
+new_local_repository(
+    name = "yocto_compiler",
+    path = "%%WORKDIR%%",
+    build_file = "//:BUILD.yocto_compiler",
+)
+
+yocto_workspace()
diff --git a/cclient/BUILD b/cclient/BUILD
index 97a44f7..7d1b226 100644
--- a/cclient/BUILD
+++ b/cclient/BUILD
@@ -11,3 +11,13 @@ cc_library(
         "//cclient/serialization:serializer_json",
     ],
 )
+
+config_setting(
+    name = "yocto_armeabi",
+    values = {
+        "crosstool_top": "@local_config_yocto_compiler//:toolchain",
+        "cpu": "armeabi",
+    },
+    visibility = ["//visibility:public"],
+)
+
diff --git a/cclient/workspace.bzl b/cclient/workspace.bzl
new file mode 100644
index 0000000..1791df5
--- /dev/null
+++ b/cclient/workspace.bzl
@@ -0,0 +1,13 @@
+load("//third_party/toolchains/yocto:yocto_compiler_configure.bzl", "yocto_compiler_configure")
+
+def clean_dep(dep):
+    return str(Label(dep))
+
+def yocto_workspace(path_prefix = "", tf_repo_name = ""):
+    # Point //external/local_config_yocto_compiler to //external/yocto_compiler
+    yocto_compiler_configure(
+        name = "local_config_yocto_compiler",
+        build_file = clean_dep("//third_party/toolchains/yocto:BUILD"),
+        remote_config_repo = "../yocto_compiler",
+    )
+
diff --git a/mam/BUILD b/mam/BUILD
index 7c05854..58b290b 100644
--- a/mam/BUILD
+++ b/mam/BUILD
@@ -4,3 +4,19 @@ cc_library(
     name = "defs",
     hdrs = ["defs.h"],
 )
+
+cc_binary(
+    name = "libmam.so",
+    linkshared = True,
+    deps = ["//mam/api"],
+)
+
+config_setting(
+    name = "yocto_armeabi",
+    values = {
+        "crosstool_top": "@local_config_yocto_compiler//:toolchain",
+        "cpu": "armeabi",
+    },
+    visibility = ["//visibility:public"],
+)
+
-- 
2.7.4

